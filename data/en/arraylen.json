{
	"name": "arrayLen",
	"type": "function",
	"syntax": "arrayLen(array)",
	"member": "someArray.len()",
	"returns": "numeric",
	"related": ["arrayAvg"],
	"description": "Determines the largest index in an array.\nFor dense arrays, this corresponds to the number of elements in the array.\n CF MX: this function can be used on child XML objects.",
	"params": [
		{
			"name": "array",
			"description": "An array from which to get the final index.",
			"required": true,
			"default": "",
			"type": "array",
			"values": []
		}
	],
	"engines": {
		"coldfusion": {
			"minimum_version": "3",
			"notes": "The member function cannot be called on literals",
			"docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arraylen.html"
		},
		"lucee": {
			"minimum_version": "",
			"notes": "",
			"docs": "https://docs.lucee.org/reference/functions/arraylen.html"
		},
		"openbd": {
			"minimum_version": "",
			"notes": "",
			"docs": "http://openbd.org/manual/?/function/arraylen"
		}
	},
	"links": [
		{
			"title": "[ANeff] Bug for: member functions cannot be called on literals (continuation of CF-3712122)",
			"description": "Adobe bug ticket to add literal support to struct and array member functions",
			"url": "https://tracker.adobe.com/#/view/CF-4202071"
		}
	],
	"examples": [
		{
			"title": "Using arrayLen to get the length of a dense array",
			"description": "Uses the arrayLen function to get the total length of a dense array",
			"code": "numberArray = [1,2,3,4];\nwriteOutput(arrayLen(numberArray));",
			"result": "4"
		},
		{
			"title": "Using member function to get the length of a dense array",
			"description": "CF11+ Lucee4.5+ Using the len member function is the same as running arrayLen.",
			"code": "colorArray = ['Green','red','blue'];\nwriteOutput(colorArray.len());",
			"result": "3"
		},
		{
			"title": "Using arrayLen on a sparse array",
			"description": "Uses the arrayLen function to get the largest index of a spare array",
			"code": "sparseArray = [];\nsparseArray[42] = 42;\nwriteOutput(arrayLen(sparseArray));",
			"result": "42"
		}
	]
}
